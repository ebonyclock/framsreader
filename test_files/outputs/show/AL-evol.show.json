[
  {
    "name": "Evolution",
    "_classname": "show",
    "info": "",
    "expdef": "standard-background",
    "code": "\n@include \"AL-shared.inc\"\n\nglobal g_step;\nglobal g_critGenoIds, g_dispNames, g_critNames, g_critFiles, g_crit_short_names;\nglobal g_next_check;\nglobal g_infolabel;\nglobal g_infoframe;\nglobal g_chart_max,g_chart_avg,g_chartdata,g_chartmax;\nglobal g_currentmodel,g_currentvalue;\nglobal g_saved_data;\n\nfunction onLoad()\n{\n  g_step = 1;\n  TrackingCam.cam_chspeed = 0.1;\n  GLDisplay.user_interaction=2+1;\n  ShowManager.dispinfo=0;\n  g_dispNames = [\"Velocity\", \"Vertical velocity\", \"Height\"];\n  g_critFiles = [\"vel\", \"vertvel\", \"vertpos\"];\n  g_critGenoIds = [\"velocity\", \"vertvel\", \"vertpos\"];\n  g_crit_short_names = [\"v\", \"vv\", \"h\"];\n\nvar but;\nbut=GUI.newButton(\"save\",\"Save & back\");\nbut.setAutolayout(0,0,0,0, 0.01,0.01, 0.3,0.15);\nbut.bgcolor=0xff66cc66; but.fgcolor=0xffffffff;\n\nbut=GUI.newButton(\"cancel\",\"Cancel & back\");\nbut.setAutolayout(0,0,0,0, 0.31,0.01, 0.3,0.15);\n\ng_infoframe=GUI.newFrame(\"frame\",\"shadowframe\");\ng_infoframe.fgcolor=0x55000000;\ng_infolabel=GUI.newLabel(\"info\",\"\");\ng_infolabel.font=4;\ng_infolabel.valign=-1;\ng_infolabel.addTo(g_infoframe);\n\ng_chart_max=GUI.newDrawing(\"chart_max\");\ng_chart_max.mode=3;\ng_chart_max.fgcolor=0x8800ff00;\ng_chart_max.addTo(g_infoframe);\n\ng_chart_avg=GUI.newDrawing(\"chart_avg\");\ng_chart_avg.mode=3;\ng_chart_avg.fgcolor=0xff99ff99;\ng_chart_avg.addTo(g_infoframe);\n\ng_currentmodel=GUI.newModel(\"mod\",\"\");\ng_currentmodel.bgcolor=0x44000000;\ng_currentmodel.addTo(g_infoframe);\ng_currentvalue=GUI.newLabel(\"val\",\"\");\ng_currentvalue.font=4;\ng_currentvalue.valign=1;\ng_currentvalue.align=0;\ng_currentvalue.addTo(g_currentmodel);\ng_currentvalue.setAutolayout(0,0,0,0, 0.02,0.02,0.96,0.96);\n\nresetChart();\n\n  loadCurrent();\n  g_saved_data=GenePools[0][0].data.clone();\n  ShowProperties_chartsize_set();//layouts some controls and calls updateBanner\n  loadEvolParams();\n\ng_helptxt=\"You are watching evolution live - be patient!\\n\\nSelect velocity or height as fitness, and creatures will be randomly mutated, crossed over, and then selected according to your choice. It takes much more time to evolve fast creatures (they need brains!) than to evolve tall creatures.\\n\\nThe chart shows the maximal and the average fitness in the gene pool. The currently best creature in the gene pool is shown simulated in the world, while evolution takes place continuously in the background.\";\naddHelpButton(GUI.top_right);\n\nif (_saved_criterion==null) //jesli tak to jest to pierwsze uzycie bo nie jest zainicjowany\n  _saved_criterion=2; //...i zaczynamy od kryterium Height bo duzo prostsze niz Velocity\nif (_saved_water==null)\n  _saved_water=0;\n\n// na koncu bo handler _set robi rozne rzeczy z gui wiec gui musi juz istniec\nShowProperties.criterion=_saved_criterion;\nShowProperties.water=_saved_water;\n\nGLDisplay.desiredsimspeed = 50; //setting simspeed starts the simulation, standard-background can't be started before the genepool is ready\n}\n\nfunction beforeLoad()\n{\nGLDisplay.menu_visible=0;\n}\n\nfunction resetChart()\n{\ng_chartdata=[];\ng_chartmax=1e-7;\n}\n\nfunction onGUIEvent(elem,arg)\n{\nif (handleHelp(elem)) return;\nswitch(elem.name)\n\t{\n\tcase \"save\":\n\t   {\n\t   GLDisplay.desiredsimspeed = 0; //stops the simulation, transfers full performance data from background thread\n\t   var g=GenePools[0].best();\n\t   GenePools[0].clear();\n\t   g.data=g_saved_data;\n\t   g.moveTo(GenePools[0]);\n\t   g.data->evaluations=g.data->evaluations+ExpState.totaltestedcr;\n\t   g.data->time=Math.time;\n\t   saveCurrent();\n\t   ShowManager.show=\"AL-eval\";\n\t   break;\n\t   }\n\tcase \"cancel\":\n           ShowManager.show=\"AL-main\";\n        }\n}\n\nfunction loadWaterLevel()\n{\n  World.wrldwat = [ -0.5, 3.5][ShowProperties.water];\n  if (ShowProperties.water!=0)\n    ExpProperties.creath=-0.5; //-0.5 = halfway between the floor and water surface\n}\n\nfunction loadEvolParams()\n{\n  var filename = \"show_evol_\" + g_critFiles[ShowProperties.criterion] + \".sim\";\n  Simulator.print(\"Loading simulator parameters from \" + filename);\n  Simulator.import(\"show_evol.sim\");\n  Simulator.import(filename);\n  loadWaterLevel();\n  sim_params.f1_mut_exmod=\"EeWwAaSs\";\n  ExpProperties.monitor_variable=g_critGenoIds[ShowProperties.criterion];\n}\n\nfunction updateChartData(avg,max)\n{\nif (max<0) max=0;\nif (avg<0) avg=0;\ng_chartdata.add(max);\ng_chartdata.add(avg);\nif (avg>g_chartmax) g_chartmax=avg*2;\nif (max>g_chartmax) g_chartmax=max*2;\nif (g_chartdata.size>120)\n   {g_chartdata.remove(0);g_chartdata.remove(1);}\n}\n\nfunction updateChart()\n{\nvar xy_max=[],xy_avg=[];\nvar xscale=g_chart_max.width/(120-2);\nvar yscale=-g_chart_max.height/g_chartmax;\nvar yoffset=g_chart_max.height;\nvar x,y;\nvar yw=g_chart_avg.height*0.02;\nfor(var i=0;i<g_chartdata.size;i+=2)\n\t{\n\tx=xscale*i;\n\txy_max.add(x);\n\ty=yoffset+yscale*g_chartdata[i];\n\txy_max.add(y);\n\txy_max.add(x);\n\txy_max.add(yoffset);\n\n\txy_avg.add(x);\n\ty=yoffset+yscale*g_chartdata[i+1];\n\txy_avg.add(y);\n\txy_avg.add(x);\n\txy_avg.add(Math.min(yoffset,y+yw));\n\t}\n//CLI.println(\"updateChart: \"+g_chart+\" \"+xy);\ng_chart_max.data=xy_max;\ng_chart_avg.data=xy_avg;\n}\n\nfunction updateBanner()\n{\n  updateChartData(ExpState.avg_value,ExpState.max_value);\n  updateChart();\n  var t;\n  if (ShowProperties.chartsize)\n    {\n    t = \"Fitness is \" + g_dispNames[ShowProperties.criterion]+\".\\n\"\n       +\"Best fitness: \" + (\"%.6f\" % ExpState.max_value)+\"\\n\"\n       + ExpState.totaltestedcr+\" genotypes evaluated.\";\n    g_infolabel.align=-1;\n    }\n  else\n    {\n    t = g_dispNames[ShowProperties.criterion]+\": \"+(\"%.6f\" % ExpState.max_value)+\"\\nEvaluated: \"+ExpState.totaltestedcr;\n    g_infolabel.align=1;\n    }\n  g_infolabel.text=t;\n  GLDisplay.banner = t;\n  g_next_check=Math.time+1.0;\n}\n\nfunction onShowStep()\n{\n\tTrackingCam.setViewDir(TrackingCam.cam_dir + 0.01, TrackingCam.cam_h);\n\tg_step++;\n\tif (Math.time > g_next_check)\n\t\tupdateBanner();\n\tif (ExpState.currentgeno) if (g_currentmodel.text!=ExpState.currentgeno.genotype)\n\t{\n\t\tg_currentmodel.text=ExpState.currentgeno.genotype;\n\t\tg_currentvalue.text=\"%.4f\" % ExpState.currentvalue;\n\t}\n\tif (Populations[0].size>0) //if we have a creature in the world...\n\t\tif (GLDisplay.desiredsimspeed>0) //if simulation running...\n\t\t\tif (Populations[0][0].perf==2) //while the creature is waiting for stabilization...\n\t\t\t\tGLDisplay.desiredsimspeed=500; //make simulation faster (by skipping visualization frames)\n\t\t\telse\n\t\t\t\tGLDisplay.desiredsimspeed=50; //when the creature is living, restore simulation standard speed\n}\n\nfunction ShowProperties_criterion_set()\n{\n  var saved_simspeed=GLDisplay.desiredsimspeed;\n  _saved_criterion=ShowProperties.criterion;\n  GLDisplay.desiredsimspeed=0; // standard-background must be stopped and restarted for settings to take effect\n  Simulator.print(\"changing criterion to \" + g_dispNames[ShowProperties.criterion]);\n  loadEvolParams();\n  ExpProperties.cleardata();\n  updateBanner();\n  GLDisplay.desiredsimspeed=saved_simspeed;\n  resetChart();\n}\n\nfunction ShowProperties_water_set()\n{\n  var saved_simspeed=GLDisplay.desiredsimspeed;\n  GLDisplay.desiredsimspeed=0; // standard-background must be stopped and restarted for settings to take effect\n  Simulator.print(\"changing water level to \" + ShowProperties.water);\n  if (ShowProperties.water)\n    _saved_water=2;\n  else\n    _saved_water=0;\n  loadWaterLevel();\n  ExpProperties.cleardata();\n  GLDisplay.desiredsimspeed=saved_simspeed;\n}\n\nfunction ShowProperties_convergence_set()\n{\n  var saved_simspeed=GLDisplay.desiredsimspeed;\n  GLDisplay.desiredsimspeed=0; // standard-background must be stopped and restarted for settings to take effect\n   if (ShowProperties.convergence == 0)\n    ExpProperties.delrule = 0; //random deletion\n  else\n    ExpProperties.delrule = 1; //inv-fitness\n  if (ExpProperties.delrule == 0)\n    Simulator.print(\"Genotype deletion: random\");\n  if (ExpProperties.delrule == 1)\n    Simulator.print(\"Genotype deletion: inversely proportional to fitness\");\n  GLDisplay.desiredsimspeed=saved_simspeed;\n}\n\nfunction ShowProperties_chartsize_set()\n{\nswitch(ShowProperties.chartsize)\n  {\n  case 0: g_infoframe.setAutolayout(0,0,0,0, 0.15,0.85,0.85,0.15);\n\t  g_currentmodel.setAutolayout(0,0,0,0, 0.98-0.2,0.03,0.2,0.94);\n\t  g_infolabel.setAutolayout(0,0,0,0, 0.05,0.05,0.9-0.2,0.9);\n\t  g_chart_max.setAutolayout(0,0,0,0, 0.01,0.01,0.98-0.22,0.98);\n\t  g_chart_avg.setAutolayout(0,0,0,0, 0.01,0.01,0.98-0.22,0.98);\n\t  break;\n  case 1: g_infoframe.setAutolayout(0,0,0,0, 0.15,0.4,0.85,0.6);\n\t  g_currentmodel.setAutolayout(0,0,0,0, 0.98-0.3,0.98-0.3,0.3,0.3);\n\t  g_infolabel.setAutolayout(0,0,0,0, 0.05,0.05,0.9,0.9);\n\t  g_chart_max.setAutolayout(0,0,0,0, 0.01,0.01,0.98,0.98);\n\t  g_chart_avg.setAutolayout(0,0,0,0, 0.01,0.01,0.98,0.98);\n\t  break;\n  }\nupdateBanner();\n}\n\nfunction ShowProperties_popsize_set()\n{\n  var saved_simspeed=GLDisplay.desiredsimspeed;\n  GLDisplay.desiredsimspeed=0; // standard-background must be stopped and restarted for settings to take effect\n  ExpProperties.capacity=ShowProperties.popsize;\n  GLDisplay.desiredsimspeed=saved_simspeed;\n}\n\nfunction ShowProperties_tournsize_set()\n{\n  var saved_simspeed=GLDisplay.desiredsimspeed;\n  GLDisplay.desiredsimspeed=0; // standard-background must be stopped and restarted for settings to take effect\n  ExpProperties.selrule=ShowProperties.tournsize;\n  GLDisplay.desiredsimspeed=saved_simspeed;\n}\n\nfunction onKey(code)\n{\nif (code==GUI.KEY_BACK)\n   {\n   if (closePopup()) return 1;\n   onGUIEvent(GUI->cancel,null);\n   return 1;\n   }\nreturn 0;\n}\n\n"
  },
  {
    "id": "criterion",
    "_classname": "property",
    "type": "d 0 2 ~Velocity~Vertical velocity~Height",
    "name": "Optimization criterion"
  },
  {
    "id": "water",
    "_classname": "property",
    "type": "d 0 1",
    "name": "Water environment"
  },
  {
    "id": "convergence",
    "_classname": "property",
    "type": "d 0 1",
    "name": "Fast convergence (remove unfit)"
  },
  {
    "id": "popsize",
    "_classname": "property",
    "type": "d 10 200 20",
    "name": "Gene pool size"
  },
  {
    "id": "tournsize",
    "_classname": "property",
    "type": "d 2 5 2",
    "name": "Selection - tournament size"
  },
  {
    "id": "chartsize",
    "_classname": "property",
    "type": "d 0 1 1",
    "name": "Big performance chart"
  }
]