[
  {
    "name": "Genetic editor",
    "_classname": "show",
    "info": "",
    "expdef": "standard",
    "code": "\n@include \"AL-shared.inc\"\n\nglobal viewer,editor,nextbut;\nglobal g_button_sets;\nglobal g_valid;\nglobal g_key_width,g_key_height;\nglobal g_format;\nglobal g_allowed_chars;\nglobal g_mode;\nglobal g_tools_submenu;\nglobal g_editarea,g_editarea_pos,g_toparea,g_using_textedit;\nglobal g_fields,g_types,g_values,g_min,g_max,g_slider,g_buttons,g_selected,g_FIRST_BUTTON;\nglobal g_white_bg,g_white_ui,g_white_num;\nglobal fun_textFromEditor;\nglobal fun_textToEditor;\nglobal fun_events;\nglobal g_partlabels;\n\nfunction makeKeyButton(char,x,y)\n{\nvar but=GUI.newButton(\"edit\"+char,char);\nbut.addTo(g_editarea);\nbut.setAutolayout(0,0,0,0, x,y,g_key_width,g_key_height);\nbut.tooltip=\"add \"+char;\nbut.font=3;\nbut.autorepeat=1;\nnextbut=x+g_key_width;\nreturn but;\n}\n\nfunction onLoad()\n{\nTrackingCam.cam_zoom = 1;\nGLDisplay.desiredsimspeed = 0;\nGLDisplay.user_interaction=0;\nGLDisplay.world_visibility=1;\nGLDisplay.skybox=\"cubeworld\";\nShowManager.dispinfo=0;\n\nloadCurrent();\nprepareEditor(GenePools[0][0].geno.format);\ncall(fun_textToEditor)(GenePools[0][0].geno.rawgenotype,0);\nupdateEditing();\n}\n\nfunction default_textFromEditor()\n{\nreturn editor.text;\n}\n\nfunction default_textToEditor(text,animate)\n{\nif (animate)\n  {\n  var d=String.diff(editor.text,text);\n  editor.edit(d);\n  }\nelse\n  {\n  editor.text=text;\n  editor.selected=String.len(text);\n  }\n}\n\n// used in f9 - g_types\nfunction makeInt(x) { return int(x); }\nfunction makeFloat(x) { return float(x); }\n\nfunction prepareEditor(format)\n{\ng_format=format;\n\ng_using_textedit=1;\ng_editarea_pos=1;\n\nviewer=GUI.newModel(\"mod1\",\"\");\nviewer.setAutolayout(10,10,-20,-20, 0,0,1,1);\n\ng_editarea=GUI.newGroup(\"editarea\");\n\neditor=GUI.newTextview(\"ed\",\"\");\neditor.font=3;\n\nnextbut=0.0;\nvar but;\n\nfun_events=null;\nfun_textFromEditor=function default_textFromEditor;\nfun_textToEditor=function default_textToEditor;\n\n// begin format-dependent code\nif (g_format==\"1\")\n  {\ng_allowed_chars=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ(,)[:].0123456789-@|/!= \"+String.char(8);\ng_key_width=0.125; g_key_height=0.125;\ng_editarea_pos=0.75;\n\nmakeKeyButton(\"X\", nextbut,0);\nmakeKeyButton(\",\", nextbut,0);\nbut=makeKeyButton(\"Look:\\nDGBH\", nextbut,0);\nbut.name=\"mode0\"; but.userdata=0;\nbut.bgcolor=0xffcccccc; but.font=0;\nbut.tooltip=\"Appearance modifiers: DGBH\";\nbut.selected=1;\nmakeKeyButton(\"D\", nextbut,0).bgcolor=0xffffcccc;\nmakeKeyButton(\"G\", nextbut,0).bgcolor=0xfccfffcc;\nmakeKeyButton(\"B\", nextbut,0).bgcolor=0xfcccccff;\nmakeKeyButton(\"H\", nextbut,0);\nnextbut=0.375;\nmakeKeyButton(\"R\", nextbut,0);\nmakeKeyButton(\"C\", nextbut,0);\nmakeKeyButton(\"Q\", nextbut,0);\nmakeKeyButton(\"L\", nextbut,0);\nbut=makeKeyButton(\"<\", nextbut,0);\nbut.text=\"<<\"; but.tooltip=\"Backspace\"; but.bgcolor=0xffff4444;  but.fgcolor=0xffffffff;\nnextbut=0.0;\nmakeKeyButton(\"(\", nextbut,0.125);\nmakeKeyButton(\")\", nextbut,0.125);\nbut=makeKeyButton(\"Struct:\\nRCQL\", nextbut,0.125);\nbut.name=\"mode1\"; but.userdata=1;\nbut.bgcolor=0xffcccccc; but.font=0;\nbut.tooltip=\"Structure modifiers: RCQL\";\nmakeKeyButton(\"d\", nextbut,0.125).bgcolor=0xffddaaaa;\nmakeKeyButton(\"g\", nextbut,0.125).bgcolor=0xffaaddaa;\nmakeKeyButton(\"b\", nextbut,0.125).bgcolor=0xffaaaadd;\nmakeKeyButton(\"h\", nextbut,0.125).bgcolor=0xffbbbbbb;\nnextbut=0.375;\nmakeKeyButton(\"r\", nextbut,0.125).bgcolor=0xffbbbbbb;\nmakeKeyButton(\"c\", nextbut,0.125).bgcolor=0xffbbbbbb;\nmakeKeyButton(\"q\", nextbut,0.125).bgcolor=0xffbbbbbb;\nmakeKeyButton(\"l\", nextbut,0.125).bgcolor=0xffbbbbbb;\n\ng_button_sets=[[\"D\",\"d\",\"G\",\"g\",\"B\",\"b\",\"H\",\"h\"],\n\t[\"R\",\"r\",\"C\",\"c\",\"Q\",\"q\",\"L\",\"l\"]];\ng_mode=0;\n\nsetButtonsVisible(g_button_sets[1],0);\n\ng_helptxt=\"\"\"<h1>Welcome to the genetic manipulation room f-one</h1><br>\nThis place is for geeks! You can directly modify the <b>f1</b> genotype, so you can build a creature of your dreams here, but it is not easy!<br>\n<br>\nYou have to discover the meaning of <b>f1</b> genes. Here are some tips: <b>X</b> creates a stick, parentheses introduce a branching with individual branches separated with a comma. <b>DGBH</b> genes control colors (red, green, blue) and width of sticks. Big letters increase a property, small letters decrease it. <b>RCQL</b> genes influence structure (rotations, curvedness, and length).<br>\n<br>\nTry it yourself and enter a few simple genotypes:<br>\n<b>  X<br>\n  XXX<br>\n  XXX(X,XX)<br>\n  RXXX(X,X(GGddbX,DDgbX))</b><br>\nand then introduce more genes.<br>\n<br>\nThe part of the body that is created by the gene under your cursor is highlighted in green.<br>\n<br>\nGenes in square brackets <b>[...]</b> describe neurons, receptors and muscles, but these can only be introduced by evolution.<br>\n<br>\nWhen you write an invalid genotype, there is an automated correction tool, but it will only be able to fix simple errors. Good luck!\n\"\"\";\n  }\nelse if (g_format==\"9\")\n  {\ng_allowed_chars=\"LRUDBF\"+String.char(8);\ng_key_width=1.0/7; g_key_height=g_key_width;\ng_editarea_pos=1.0-g_key_height;\n\nmakeKeyButton(\"L\", nextbut,0);\nmakeKeyButton(\"R\", nextbut,0);\nmakeKeyButton(\"D\", nextbut,0);\nmakeKeyButton(\"U\", nextbut,0);\nmakeKeyButton(\"B\", nextbut,0);\nmakeKeyButton(\"F\", nextbut,0);\n\nbut=makeKeyButton(\"<\", nextbut,0);\nbut.text=\"<<\"; but.tooltip=\"Backspace\"; but.bgcolor=0xffff4444;  but.fgcolor=0xffffffff;\n\ng_helptxt=\"\"\"<h1>Welcome to the genetic manipulation room f-nine</h1><br>\nThe <b>f9</b> genetic language is very easy. Use 6 letters for 6 directions:<br>\n<b>Left, Right, Down, Up, Back, Forth</b><br>\nTry it!\n\"\"\";\n  }\nif (g_format==\"F\")\n  {\ng_using_textedit=0;\n// each fields is array: [\"name\", min_value, max_value, format]. This could be read from c++ source if fF_genotype.cpp:fF_growth_params were known to the VM\ng_fields=[[\"n\",1,15,\"%d\"],[\"sx\",1.0,1.1,\"%.2f\"],[\"sy\",1.0,1.1,\"%.2f\"],[\"sz\",1.0,1.1,\"%.2f\"],[\"tr\",-1.0,1.0,\"%.2f\"],[\"a1\",-3.1415926,3.1415926,\"%.2f\"],[\"a2\",-3.1415926,3.1415926,\"%.2f\"]];\nvar b_size=1.0/g_fields.size;\ng_editarea_pos=1.0-b_size-0.15;\n\ng_types=[function makeInt, function makeFloat, function makeFloat, function makeFloat, function makeFloat, function makeFloat, function makeFloat]; // converting strings to appropriate numeric type\ng_values=[];\n\ng_FIRST_BUTTON=100;\ng_buttons=[];\nfor(var i=0;i<g_fields.size;i++)\n   {\n   var b=GUI.newButton(\"b\"+i,\"\");\n   b.addTo(g_editarea);\n   b.userdata=g_FIRST_BUTTON+i;\n   g_buttons[i]=b;\n   b.font=5;\n   b.setAutolayout(0,0,0,0, b_size*i,0.15,b_size,b_size);\n   }\ng_selected=-1;\n\ng_min=GUI.newLabel(\"min\",\"\");\ng_min.addTo(g_editarea);\ng_min.align=-1; g_min.fgcolor=0xffffffff; g_min.visible=0; g_min.font=3;\ng_min.setAutolayout(0,0,0,0, 0.02,0.02,1.0-0.02*2,0.15-0.02*2);\ng_max=GUI.newLabel(\"max\",\"\");\ng_max.addTo(g_editarea);\ng_max.align=1; g_max.fgcolor=0xffffffff; g_max.visible=0; g_max.font=3;\ng_max.setAutolayout(0,0,0,0, 0.02,0.02,1.0-0.02*2,0.15-0.02*2);\n\ng_slider=GUI.newSlider(\"sli\",0,-1,1);\ng_slider.addTo(g_editarea);\ng_slider.setAutolayout(0,0,0,0, 0.02,0.02,1.0-0.02*2,0.15-0.02*2);\ng_slider.visible=0;\n\nfun_textToEditor=function ff_textToEditor;\nfun_textFromEditor=function ff_textFromEditor;\nfun_events=function ff_events;\n\ng_helptxt=\"\"\"<p>Welcome to the genetic manipulation room f-F. You can modify Foraminifera genes here.\n<p>Click on a gene and use the slider to adjust the value.\n<p>Learn more <a href=\"http://www.framsticks.com/foraminifera\">here</a>.\n\"\"\";\n  }\n// end format-dependent code\n\ng_toparea=GUI.newGroup(\"top\");\n\nvar but;\nbut=GUI.newButton(\"save\",\"Save & back\");\nbut.addTo(g_toparea);\nbut.setAutolayout(0,0,0,0, 0.01,0.03, 0.3,0.94);\nbut=GUI.newButton(\"cancel\",\"Cancel & back\");\nbut.addTo(g_toparea);\nbut.setAutolayout(0,0,0,0, 0.31,0.03, 0.3,0.94);\n\ng_tools_submenu=[];\nbut=GUI.newButton(\"mut\",\"Mutate\");\nbut.visible=0;\ng_tools_submenu.add(but);\nbut=GUI.newButton(\"copy\",\"Copy\");\nbut.visible=0;\ng_tools_submenu.add(but);\nbut=GUI.newButton(\"paste\",\"Paste\");\nbut.visible=0;\ng_tools_submenu.add(but);\nvar white_group=GUI.newGroup(\"white_gr\");\nbut=white_group;\nbut.visible=0;\ng_tools_submenu.add(but);\n//but=GUI.newButton(\"share\",\"Share\");\n//but.visible=0;\n//g_tools_submenu.add(but);\nbut=GUI.newButton(\"tools\",\"\");\nbut.image=\"tool-icon-shadow\";\nbut.style=1;\n\nbut.addTo(GUI.top_right);\naddHelpButton(GUI.top_right);\n\nbut=GUI.newButton(\"white_bg\",\"\");\nbut.image=\"roundwithoutline\";\ng_white_bg=but;\ng_white_bg.selected=ShowProperties.whitebg;\ng_white_bg.userdata=\"whitebg\";\nbut.font=0;\nbut.addTo(white_group);\nbut.setAutolayout(0,0,0,0, 0,0,0.33,1);\nbut=GUI.newButton(\"white_ui\",String.char(27)+\"tfullscreen-icon;\");\ng_white_ui=but;\ng_white_ui.userdata=\"fullscreen\";\ng_white_ui.selected=ShowProperties.fullscreen;\nbut.addTo(white_group);\nbut.setAutolayout(0,0,0,0, 0.33,0,0.33,1);\nbut=GUI.newButton(\"white_num\",\"012\");\ng_white_num=but;\ng_white_num.userdata=\"partlabels\";\ng_white_num.selected=ShowProperties.partlabels;\nbut.font=0;\nbut.addTo(white_group);\nbut.setAutolayout(0,0,0,0, 0.66,0,0.33,1);\n\nif (ShowProperties.fullscreen)\n   {\n   editor.visible=0;\n   g_editarea.animSetBegin();\n   GUI[\"helpbut\"].visible=0;\n   g_editarea.setAutolayout(0,0,0,0, 0,1,1,1);\n   viewer.setAutolayout(0,0,0,0, 0,0,1,1);\n   g_toparea.setAutolayout(0,0,0,0, 0,-0.15,1,0.15);\n   }\nelse\n   {\n   editor.visible=g_using_textedit;\n   GUI[\"helpbut\"].visible=1;\n   g_editarea.setAutolayout(0,0,0,0, 0,g_editarea_pos,1,1);\n   viewer.setAutolayout(10,10,-20,-20, 0,0,1,g_editarea_pos);\n   g_toparea.setAutolayout(0,0,0,0, 0,0,1,0.15);\n   }\n\nif (ShowProperties.whitebg)\n   editor.fgcolor=0xff000000;\nelse\n   editor.fgcolor=0xffffffff;\n\neditor.setAutolayout(0,0,0,0, 0.01,0.55,0.98,g_editarea_pos-0.55);\n}\n\nfunction ff_textFromEditor()\n{\nvar g=\"\";\nfor(var i=0;i<g_fields.size;i++)\n   {\n   if (i>0) g+=\",\";\n   g+=\"%g\" % g_values[i];\n   }\nreturn g;\n}\n\nfunction ff_textToEditor(text,animate)\n{\nvar split=String.split(text,\",\");\n\nwhile(split.size<g_fields.size)\n   split.add(\"0\");\n\nfor(var i=0;i<g_fields.size;i++)\n   g_values[i]=call(g_types[i])(split[i]);\n\nupdateButtonLabels();\nsetupSlider();\n}\n\nfunction updateButtonLabel(i)\n{\ng_buttons[i].text=g_fields[i][0]+\"\\n\"+(g_fields[i][3] % g_values[i]);\n}\n\nfunction updateButtonLabels()\n{\nfor(var i=0;i<g_fields.size;i++)\n   updateButtonLabel(i);\n}\n\nfunction setupSlider()\n{\nif (g_selected<0) return;\nvar f=g_fields[g_selected];\ng_min.text=\" \"+(f[3]%f[1]);\ng_min.visible=1;\ng_max.text=\"\"+(f[3]%f[2])+\" \";\ng_max.visible=1;\ng_slider.min=f[1];\ng_slider.max=f[2];\ng_slider.data=g_values[g_selected];\n}\n\nfunction ff_events(elem,arg)\n{\nif ((typeof(elem.userdata)==\"int\") && (elem.userdata>=g_FIRST_BUTTON) && (elem.userdata<(g_FIRST_BUTTON+g_values.size)))\n   {\n   if (g_selected>=0)\n      g_buttons[g_selected].selected=0;\n   g_selected=elem.userdata-g_FIRST_BUTTON;\n   g_buttons[g_selected].selected=1;\n   g_slider.visible=1;\n   setupSlider();\n   return 1;\n   }\nswitch(elem.name)\n   {\n   case \"sli\":\n      {\n      var new_value=call(g_types[g_selected])(elem.data);\n      var old_txt=g_fields[g_selected][3] % g_values[g_selected];\n      var new_txt=g_fields[g_selected][3] % new_value;\n      if (new_txt!=old_txt)\n        {\n        g_values[g_selected]=call(g_types[g_selected])(new_txt);\n        updateButtonLabel(g_selected);\n        updateEditing();\n        }\n      return 1;\n      }\n   }\nreturn 0;\n}\n\nfunction onShowStep()\n{\nTrackingCam.setOrient(viewer.orient);\nupdatePartLabels();\n}\n\nfunction setButtonsVisible(names,vis)\n{\nfor(var n in names)\n      GUI[\"edit\"+n].visible=vis;\n}\n\nfunction genoFromEditor()\n{\nvar t=call(fun_textFromEditor)();\nreturn Geno.newFrom(t,g_format,\"\",\"\");\n}\n\nfunction createPartLabels()\n{\nif (g_partlabels!=null) //destroy old\n  {\n  for (var lab in g_partlabels)\n     GUI.removeElement(lab);\n  g_partlabels=null;\n  }\nif (!ShowProperties.partlabels) return;\ng_partlabels=[];\nvar m=Model.newFromString(viewer.text);\nfor(var i=0;i<m.numparts;i++)\n  {\n  var p=m.getPart(i);\n  var lab=GUI.newLabel(\"part\"+i,i);\n  lab.font=4; lab.bgcolor=0x88ff0000; lab.align=0; lab.valign=0;\n  lab.rect=lab.minimalRect;\n  lab.height=0.8*lab.height;\n//  var lab=GUI.newBubble(\"part\"+i,i);\n  lab.userdata=(p.x,p.y,p.z);\n  g_partlabels.add(lab);\n  lab.addTo(viewer);\n  }\n}\n\nfunction updatePartLabels()\n{\nif (g_partlabels==null) return;\nfor (var lab in g_partlabels)\n  {\n  var pos=GLDisplay.project3D(viewer,lab.userdata);\n  if (pos)\n    lab.setPos(pos.x-lab.width/2,pos.y-lab.height/2);\n  }\n}\n\n// update model viewer, check validity, update save button state\nfunction updateEditing()\n{\nvar geno=genoFromEditor();\nviewer.text=geno.genotype;\ng_valid=geno.is_valid;\nvar but=GUI[\"save\"];\nif (g_valid)\n   {\n   but.text=\"Save & back\";\n   but.bgcolor=0xff66cc66; but.fgcolor=0xffffffff;\n   viewer.selected=editor.selected;\n   createPartLabels();\n   }\nelse\n   {\n   var fixable=GenMan.validate(geno).is_valid;\n   but.bgcolor=0xffcc0000;\n   but.text=\"Invalid.\\n\";\n   if (fixable)\n   {\n   \t but.text+=\"Click to repair\";\n   \t but.fgcolor=0xffffffff;\n   }\n   else\n   {\n   \t but.text+=\"Cannot repair\";\n   \t but.fgcolor=0xffffbbbb; //namiastka disable\n   }\n   }\n}\n\nfunction createMutant(original_g)\n{\n  var new_g=GenMan.mutate(original_g);\n  if (!new_g.is_valid) return null;\n  new_g.info=\"mutated '\"+original_g.name+\"'\";\n  return new_g;\n}\n\nfunction mutate()\n{\nvar g = genoFromEditor();\nvar new_g = createMutant(g);\nif (new_g!=null)\n  {\n  call(fun_textToEditor)(new_g.rawgenotype,1);\n  updateEditing();\n  }\n}\n\nfunction showGenotype(txt,guimode)\n{\nvar g=Geno.newFromString(txt); // case 1: contains /*format*/\nif (!g.is_valid)\n   {\n   g=Geno.newFrom(txt,g_format,\"\",\"\"); // case 2: raw genotype for current format\n   if (!g.is_valid)\n      {\n      if (guimode)\n        {\n        GUI.playSound(\"bzzt\");\n        GUI.messageBox(\"Invalid genotype (Ignored)\",txt);\n        }\n      else\n        {\n        Simulator.message(\"Invalid genotype:\\n\"+txt,2);\n        }\n      return 0;\n      }\n   }\nif (g_format!=g.format)\n  {\n  // format changed - reconfigure the editor\n  GUI.removeAll();\n  g_partlabels=null;\n  ALsharedResetGUI();\n  prepareEditor(g.format);\n  }\ncall(fun_textToEditor)(g.rawgenotype,0);\nupdateEditing();\nreturn 1;\n}\n\nfunction paste()\n{\nvar t=GUI.clipboard;\nif (t!=\"\")\n  showGenotype(t,1);\n}\n\nfunction onGUIEvent(elem,arg)\n{\nif (handleHelp(elem)) return;\n\nif (fun_events)\n   if (call(fun_events)(elem,arg)) return;\n\nswitch(elem.name)\n   {\n   case \"save\":\n     {\n     var geno=genoFromEditor();\n     if (g_valid)\n       {\n       GenePools[0].clear();\n       var g=GenePools[0].add(geno);\n       setInitialDataDictionary(g);\n       g.data->edited=1;\n       g.data->time=Math.time;\n       saveCurrent();\n       ShowManager.show=\"AL-eval\";\n       return;\n       }\n     else\n       {\n       call(fun_textToEditor)(GenMan.validate(geno).rawgenotype,0);\n       updateEditing();\n       return;\n       }\n     }\n\n   case \"cancel\":\n     ShowManager.show=\"AL-main\";\n     return;\n\n   case \"mut\":\n     mutate();\n     return;\n\n   case \"copy\":\n     GUI.clipboard=genoFromEditor().genotype;\n     return;\n\n   case \"paste\":\n     paste();\n     return;\n\n   case \"tools\":\n     handleSubMenu(elem,g_tools_submenu,1,0.25,0.14);\n     return;\n   }\n\nif (String.startsWith(elem.name,\"white_\"))\n   {\n   elem.selected=!elem.selected;\n   ShowProperties.[elem.userdata]=elem.selected;\n   }\n\nif (String.startsWith(elem.name,\"mode\"))\n   {\n   if (elem.userdata==g_mode) return;\n   setButtonsVisible(g_button_sets[g_mode],0);\n   setButtonsVisible(g_button_sets[elem.userdata],1);\n   elem.selected=1;\n   GUI[\"mode\"+g_mode].selected=0;\n   g_mode=elem.userdata;\n   return;\n   }\n\nif (String.startsWith(elem.name,\"edit\"))\n   {\n   var ch=elem.text;\n   if (ch==\"<<\") ch=String.char(8);\n   editor.edit(ch);\n   updateEditing();\n   return;\n   }\n\nif (elem.name==\"ed\")\n   {\n   if (g_valid)\n     viewer.selected=editor.selected;\n   }\n}\n\nfunction onResize()\n{\n}\n\nfunction onKey(code)\n{\nif (code==GUI.KEY_BACK)\n   {\n   if (closePopup()) return 1;\n   onGUIEvent(GUI[\"cancel\"],null);\n   return 1;\n   }\n//CLI.println(\"code=\"+code);\nvar ch=String.char(code);\nif ((!ShowProperties.fullscreen) && (String.indexOf(g_allowed_chars,ch)>=0))\n   {\n   editor.edit(ch);\n   updateEditing();\n   }\nreturn 0;\n}\n\nfunction ShowProperties_whitebg_set()\n{\n  g_white_bg.selected=ShowProperties.whitebg;\nif (ShowProperties.whitebg)\n   {\n   GLDisplay.bgcolor=0xffffffff;\n   GLDisplay.world_visibility=0;\n   editor.fgcolor=0xff000000;\n   }\nelse\n   {\n   GLDisplay.world_visibility=1;\n   editor.fgcolor=0xffffffff;\n   }\n}\n\nfunction ShowProperties_fullscreen_set()\n{\n  g_white_ui.selected=ShowProperties.fullscreen;\nif (ShowProperties.fullscreen)\n   {\n   editor.visible=0;\n   GUI[\"helpbut\"].visible=0;\n   g_editarea.animSetBegin();\n   g_editarea.setAutolayout(0,0,0,0, 0,1,1,1);\n   g_editarea.animSetEnd();\n   viewer.animSetBegin();\n   viewer.setAutolayout(0,0,0,0, 0,0,1,1);\n   viewer.animSetEnd();\n   g_toparea.animSetBegin();\n   g_toparea.setAutolayout(0,0,0,0, 0,-0.15,1,0.15);\n   g_toparea.animSetEnd();\n   }\nelse\n   {\n   editor.visible=g_using_textedit;\n   GUI[\"helpbut\"].visible=1;\n   g_editarea.animSetBegin();\n   g_editarea.setAutolayout(0,0,0,0, 0,g_editarea_pos,1,1);\n   g_editarea.animSetEnd();\n   viewer.animSetBegin();\n   viewer.setAutolayout(10,10,-20,-20, 0,0,1,g_editarea_pos);\n   viewer.animSetEnd();\n   g_toparea.animSetBegin();\n   g_toparea.setAutolayout(0,0,0,0, 0,0,1,0.15);\n   g_toparea.animSetEnd();\n   }\nif (viewer.width>0) //workaround: when called before the gui is first displayed (e.g. from command line), viewer.size is not yet calculated and animation would fail\n  {\n  g_toparea.startAnimation(1.0);\n  g_editarea.startAnimation(1.0);\n  viewer.startAnimation(1.0);\n  }\n}\n\nfunction ShowProperties_partlabels_set()\n{\n  g_white_num.selected=ShowProperties.partlabels;\n  createPartLabels();\n  updatePartLabels();\n}\n\nfunction ShowProperties_genotype_set()\n{\n  if (!showGenotype(ShowProperties.genotype,0))\n    showGenotype(\"\"\"//0\np:sh=1,sx=1,sy=1,sz=1,vr=1,vg=1,vb=0\np:-0.4,-0.8,0.4,sx=0.15,sy=0.15,sz=0.15,sh=1,vr=0,vg=0,vb=0\np:0.4,-0.8,0.4,sx=0.15,sy=0.15,sz=0.15,sh=1,vr=0,vg=0,vb=0\np:0,-0.95,0,sh=1,sx=0.25,sy=0.1,sz=0.1,vr=1,vg=0,vb=0\np:-0.35,-0.9,-0.15,sh=1,sx=0.25,sy=0.1,sz=0.1,ry=0.6,rz=-0.4,vr=1,vg=0,vb=0\np:0.35,-0.9,-0.15,sh=1,sx=0.25,sy=0.1,sz=0.1,ry=-0.6,rz=0.4,vr=1,vg=0,vb=0\nj:0,1,sh=1\nj:0,2,sh=1\nj:0,3,sh=1\nj:0,4,sh=1\nj:0,5,sh=1\n\"\"\",0);\n}\n\n"
  },
  {
    "id": "whitebg",
    "_classname": "property",
    "type": "d 0 1",
    "name": "White background"
  },
  {
    "id": "fullscreen",
    "_classname": "property",
    "help": "Hide user interface",
    "type": "d 0 1",
    "name": "Full screen"
  },
  {
    "id": "partlabels",
    "_classname": "property",
    "type": "d 0 1",
    "name": "Display part labels"
  },
  {
    "id": "genotype",
    "_classname": "property",
    "type": "s",
    "name": "Genotype to display"
  }
]