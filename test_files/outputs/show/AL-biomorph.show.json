[
  {
    "name": "Biomorph",
    "_classname": "show",
    "info": "User-driven evolution. Choose a creature and double-click it to create its offspring. Eight creatures are mutated from the one in the middle.\n",
    "expdef": "standard",
    "code": "\n@include \"AL-shared.inc\"\n\nglobal g_anim;\nglobal g_animspeed;\nglobal g_animtime;\nglobal g_selcreature;\nglobal g_selx;\nglobal g_sely;\nglobal g_selz;\nglobal g_lasttime;\nglobal g_speed;\nglobal g_frames;\nglobal g_generation;\n\nfunction onLoad()\n{\n  Math.seed = Math.time;\n  g_speed = 1.0;\n  g_frames = 0;\n  g_lasttime = Math.time;\n  sim_params.f1_mut_exmod=\"EeWwAaSs\";\n  GLDisplay.user_interaction=2+8+1;\n  ShowManager.dispinfo=0;\n  World.wrldtyp = 1;\n  World.wrldmap = \"m 3 3 676787676\";\n  World.wrldsiz = 20.0;\n  World.wrldbnd = 1;\n  TrackingCam.cam_change=1;\n  TrackingCam.setTarget(10,10,2,20);\n  GLDisplay.simsteps = 0;\n  ShowProperties.differ = 2;\n  TrackingCam.cam_change=2;\n  TrackingCam.cam_chspeed = 0.1;\n  TrackingCam.cam_zoom = 1.3;\n  loadCurrent();\n\nvar info=GUI.newLabel(\"info\",\"\"); // 'restartWithGenotype()' uses GUI->info\ninfo.align=0;\ninfo.font=4;\ninfo.setAutolayout(0,0,0,0, 0,0.9,1,0.1);\n\n  restartWithGenotype(GenePools[0][0].genotype, \"Current genotype\");\n  g_animspeed = 0.002;\n  g_generation = 0;\n\nvar but;\nbut=GUI.newButton(\"save\",\"Save & back\");\nbut.setAutolayout(0,0,0,0, 0.01,0.01, 0.3,0.15);\nbut.bgcolor=0xff66cc66; but.fgcolor=0xffffffff;\n\nbut=GUI.newButton(\"cancel\",\"Cancel & back\");\nbut.setAutolayout(0,0,0,0, 0.31,0.01, 0.3,0.15);\n\ng_helptxt=\"Human-guided evolution: choose a creature and double-touch it to create its offspring. Eight creatures are mutated from the one in the middle.\\n\\nClick the \\\"Save\\\" button to accept the creature in the middle.\";\naddHelpButton(GUI.top_right);\n}\n\nfunction beforeLoad()\n{\nGLDisplay.menu_visible=0;\n}\n\nfunction onGUIEvent(elem,arg)\n{\nif (handleHelp(elem)) return;\nswitch(elem.name)\n   {\n   case \"save\":\n      {\n      var saved_data=GenePools[0][0].data.clone();\nSimulator.print(\"saved_data=\"+saved_data);\n      GenePools[0].clear();\n      var g=GenePools[0].add(Populations[0][0].geno);\n      g.data=saved_data;\n      g.data->selections=g.data->selections+g_generation;\n      g.data->time=Math.time;\n      saveCurrent();\n      ShowManager.show=\"AL-eval\";\n      }\n      return;\n   case \"cancel\":\n      ShowManager.show=\"AL-main\";\n      return;\n   }\n}\n\nfunction restartWithGenotype(gen, name)\n{\n  CreatureSelection.clear();\n  var pop=Populations[0];\n  pop.clear();\n  var cr = pop.add(gen);\n  cr.name = name;\n  cr.info = \"the origin\";\n  if (cr == null)\n  {\n    CLI.println(\"initial genotype is invalid!\");\n    return ;\n  }\n  cr.locationSetBboxLow((World.wrldsiz -cr.bboxSize.x) / 2, (World.wrldsiz - cr.bboxSize.y) / 2, 3);\n  updateBanner();\n  g_anim = 0;\n  breed();\n}\n\nfunction createMutant(threshold) //same function in mutation.show, biomorph.show and AL-biomorph.show :/\n{\n  var cr=Populations[0][0];\n  var mut_count = 0;\n  var distance;\n  var original_g = cr.geno; // previous genotype\n  var new_g = original_g;\n  var max_retry = 20;\n  if (original_g.format == \"F\") //'F' format for which 1) structural similary is not very useful and 2) conversion fF->f0 takes a lot of time for multiple-Part creatures, so let's not do this many times here\n  \tmax_retry = 5;\n  for(var retry=0; retry<max_retry; retry++)\n  {\n    new_g=GenMan.mutate(new_g);\n    mut_count++;\n    if (!new_g.is_valid)\n    {\n      new_g=original_g;\n      mut_count = 0;\n      continue;\n    }\n    //\tCLI.println(original_g.genotype+\" ... \"+new_g.genotype);\n    if (threshold < 0.001) //no threshold\n      break;\n    distance = ModelSimilarity.evaluateDistance(original_g, new_g);\n    //\tCLI.println(\"distance=\"+distance);\n    if (distance >= threshold)\n      break;\n  }\n  if (mut_count>1) //when there was a sequence of many mutations, we don't know how many % of genotype mutated, so the information in new_g.info is useless (it only concerns the last mutation in the sequence, and creature names in the sequence are not auto-generated).\n    new_g.info=\"'\"+original_g.name+\"' after \"+mut_count+\" mutations\";\n  if (!new_g.is_valid)\n  {\n    CLI.println(\"invalid mutant!\");\n  }\n  else\n  {\n    Populations[0].add(new_g);\n  }\n}\n\nfunction breed()\n{\n  var i;\n  for (i = 0;i < 8;i++)\n    createMutant([0.0, 0.5, 2.0, 10.0][ShowProperties.differ]);\n  \n  //adjust world size to fit creatures:\n  var size=0.0;\n  var c,count=9;\n  var pop=Populations[0];\n  for (c = 0;c < count;c++)\n  {\n    var cr = pop[c];\n    size+=Math.max(cr.bboxSize.x,cr.bboxSize.y); //shape=0 parts have size_xyz=1.0 (even though they are visually smaller)\n    //Simulator.print(\"\"+cr.bboxSize.x+\" \"+cr.bboxSize.y+\" \"+cr.bboxSize.z);\n  }\n  var newsize=(2.0+3.0)*(size/count); //(2 margin tiles + 3 world blocks)*(average creature size)\n  if (newsize>1.1*World.wrldsiz || newsize<World.wrldsiz*0.7) //resize the world only when a significant change in size is required\n    {\n    World.wrldsiz=newsize;\n    TrackingCam.setTarget(newsize/2,newsize/2,2,newsize);\n    }\n  //center creatures in the middle of the (just resized) world\n  for (c = 0;c < count;c++)\n  {\n    var cr = pop[c];\n    cr.locationSetBboxLow((World.wrldsiz - cr.bboxSize.x) / 2, (World.wrldsiz - cr.bboxSize.y) / 2, 3);\n  }\n    \n  g_anim = 1;\n  g_animtime = 0.0;\n}\n\nfunction updateBanner()\n{\n  var t = \"\";\n  var pop=Populations[0];\n  if (pop.size > 0)\n  {\n    var cr = pop[0];\n    t += \"Current creature '\" + cr.name + \"' has a genotype\\n\" + cr.genotype + \"\\nwhich is \" + cr.info + \".\";\n  }\n  GLDisplay.banner = t;\n  GUI->info.text=\"Generation: \"+g_generation;\n}\n\nfunction explodeStep()\n{\n  g_animtime = g_animtime + g_animspeed;\n  if (g_animtime > 1.0)\n  {\n    g_animtime = 1.0;\n    g_anim = 0;\n  }\n\n  var t1 = g_animtime, t2 = 1.0 - g_animtime;\n  var i, j, c, cr;\n  var tx, ty, tz, x, y, z;\n  var pop=Populations[0];\n  c = 0;\n  for (i = -1;i <= 1;i++)\n    for (j = -1;j <= 1;j++)\n    {\n      if ((i == 0) && (j == 0))\n        continue;\n      c++;\n      tx = World.wrldsiz * (0.5 + 0.2 * i);\n      ty = World.wrldsiz * (0.5 + 0.2 * j);\n      if ((i == 0) || (j == 0))\n        tz = 2.0;\n      else\n        tz = 1.0;\n      tz += t1 * t2 * 30.0;\n      cr = pop[c];\n      x = (t2 * (World.wrldsiz / 2)) + (t1 * tx) - (cr.bboxSize.x / 2);\n      y = (t2 * (World.wrldsiz / 2)) + (t1 * ty) - (cr.bboxSize.y / 2);\n      z = t2 * 3 + t1 * tz;\n      cr.locationSetBboxLow(x, y, z);\n    }\n}\n\nfunction selectionStep()\n{\n  g_animtime = g_animtime + g_animspeed;\n  if (g_animtime > 1.0)\n  {\n    g_animtime = 1.0;\n    g_anim = 0;\n  }\n\n  var t1 = g_animtime, t2 = 1.0 - g_animtime;\n  var i, j, c, cr;\n  var tx, ty, tz, x, y, z;\n  var pop=Populations[0];\n  for (c = 0;c <= 8;c++)\n  {\n    cr = pop[c];\n    if (cr == g_selcreature)\n    {\n      x = (t1 * ((World.wrldsiz - cr.bboxSize.x) / 2)) + (t2 * g_selx);\n      y = (t1 * ((World.wrldsiz - cr.bboxSize.y) / 2)) + (t2 * g_sely);\n      z = t1 * 3 + t2 * g_selz;\n      cr.locationSetBboxLow(x, y, z);\n    }\n    else\n      cr.locationMoveBy(0, 0, g_animspeed*cr.bboxSize.z* -1.0);\n  }\n\n  if (g_anim == 0)\n  {\n    if (g_selcreature!=pop[0]) //pop[0] = middle creature\n        g_generation++; //else retrying the same parent - no new generation\n\n    for (c = 0;c < pop.size;c++)\n    {\n      cr = pop[c];\n      if (cr != g_selcreature)\n      {\n        pop.delete(c);\n        c--;\n      }\n    }\n    updateBanner();\n    breed();\n  }\n}\n\nfunction onShowStep()\n{\n  TrackingCam.setViewDir(TrackingCam.cam_dir + g_animspeed, TrackingCam.cam_h);\n  switch (g_anim)\n  {\n  case 1:\n    explodeStep();\n    break;\n  case 2:\n    selectionStep();\n    break;\n  }\n  g_frames++;\n  var t = Math.time;\n  var dt = Math.time - g_lasttime;\n  if ((dt > 1.0) && (g_frames > 5))\n  {\n    dt = dt / g_frames;\n    if (dt < 0.001)\n      dt = 0.001;\n    else if (dt > 1.0)\n      dt = 1.0;\n    //\tCLI.println(\"adjusted anim speed for \"+1.0/dt+\" fps\");\n    g_animspeed = (g_animspeed + g_speed * dt) / 2.0;\n    g_lasttime = t;\n    g_frames = 0;\n  }\n}\n\nfunction onSelectionChange()\n{\n  if (CreatureSelection.count > 0)\n  {\n    if (g_anim == 0)\n    {\n      g_anim = 2;\n      g_animtime = 0.0;\n      g_selcreature = CreatureSelection.get(0);\n      CLI.println(\"selected:\\n\" + g_selcreature.genotype);\n      g_selx = g_selcreature.bboxLow.x;\n      g_sely = g_selcreature.bboxLow.y;\n      g_selz = g_selcreature.bboxLow.z;\n      GUI.playSound(\"pyk\");\n    }\n    CreatureSelection.clear();\n  }\n  updateBanner();\n}\n\nfunction onKey(code)\n{\nif (code==GUI.KEY_BACK)\n   {\n   if (closePopup()) return 1;\n   onGUIEvent(GUI->cancel,null);\n   return 1;\n   }\nreturn 0;\n}\n\n"
  },
  {
    "id": "differ",
    "_classname": "property",
    "type": "d 0 3 ~Single mutation~Forced: small~Forced: medium~Forced: big",
    "name": "Mutant variation"
  }
]