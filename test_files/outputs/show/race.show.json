[
  {
    "name": "Terrain race",
    "_classname": "show",
    "info": "Speed competition",
    "expdef": "standard",
    "code": "\n//by MacKo, 2004, 2005\n\nglobal g_restartrequest;\nglobal g_newterrainrequest;\nglobal g_starttime;\nglobal g_lasttesttime, g_lasttestscore; //for detecting stagnation\nglobal g_lastcamchange;\nglobal g_camdeltaangle;\n\nfunction onLoad()\n{\n  Math.seed = Math.time;\n  Simulator.import(\"show_noevol.sim\");\n\n  var pop=Populations[0];\n  pop.nnsim = 2; //will be enabled directly for each creature\n  pop.death = 0;\n  pop.energy = 0;\n  pop.selfmask = pop.othermask = 0; //ignore collisions; could be 0x10001/0x20000 to allow eating apples, but then new apples appear in random places...\n\n  TrackingCam.cam_chspeed = 0.1;\n  TrackingCam.cam_zoom = 1.2;\n  TrackingCam.setViewDir(270, 30); //270:side view\n  GLDisplay.simsteps = 0;\n\n  ShowProperties.length = 1;\n  ShowProperties.difficulty = 1;\n  ShowProperties_length_set();\n  ShowProperties.runners = 2;\n  ShowProperties_runners_set();\n  GLDisplay.desiredsimspeed=100;\n\n  Simulator.import(\"walking.gen\");\n  removeBad();\n  g_restartrequest = Simulator.stepNumber + 20; //20 zeby sie utworzyly stwory... to samo w runners_set()\n  g_newterrainrequest = -1;\n  g_lastcamchange = Math.time;\n  g_camdeltaangle = 0;\n}\n\nfunction putOnTheGround(cr, x, y) //just to adjust the proper \"z\" value in the new (x,y) world place\n{\n  var z = WorldMap.getHeight(x, y);\n  if (World.wrldwat > z) // water here!\n  {\n    if (ExpProperties.creath > 0)\n      z = World.wrldwat + ExpProperties.creath;\n    else\n      z = (1.0 + ExpProperties.creath) * World.wrldwat - z * ExpProperties.creath;\n  }\n  else                 // land area\n  {\n    if (ExpProperties.creath > 0)\n      z += ExpProperties.creath;\n  }\n  cr.locationSetBboxLow(x, y, z - 0.999);\n}\n\nfunction restartRace()\n{\n  var i, y;\n  var pop=Populations[0];\n  var count = pop.size;\n  if (count == 0)\n    return ;\n  Simulator.print(\"Restarting race... \" + count + \" runners.\");\n  World.wrldtyp = 2;\n  for (i = 0;i < count;i++)\n  {\n    y = World.wrldsiz / (3 * count + 1) * (3.0 * i + 2);\n    var cr = pop[i];\n    cr.rotate(0,0,GenePools[0].findGenotype(cr.geno).data->walking_direction); //use rotateAbs instead, when it is available\n    putOnTheGround(cr, World.wrldsiz - 10.0 - cr.bboxSize.x / 2, y - cr.bboxSize.y / 2);\n    cr.data->target_x = 10.0 - cr.bboxSize.x / 2;\n    cr.nnenabled = 1; //bring to life\n    cr = Populations[1][i]; //food \"target indicator\"\n    putOnTheGround(cr, 10.0 - cr.bboxSize.x / 2, y - cr.bboxSize.y / 2);\n  }\n  g_starttime = Math.time;\n  g_lasttesttime = g_starttime;\n  g_lasttestscore = 99999;\n}\n\nfunction status()\n{\n  var i, best = 0, cr, s;\n  var pop=Populations[0];\n  if (pop.size == 0)\n    return \"no runners yet...\";\n  for (i = 1;i < pop.size;i++)\n    if (pop[i].bboxLow.x < pop[best].bboxLow.x)\n      best = i;\n  var lane = pop.size - best;\n  cr = pop[best];\n  i = int(cr.bboxLow.x - cr.data->target_x);\n  s = cr.name + \" leads on lane #\" + lane + \", \" + i + \"m to finish\";\n  if (i < 4)\n    s = cr.name + \" on lane #\" + lane + \" finishing...\";\n  if (i < 1)\n  {\n    s = cr.name + \" on lane #\" + lane + \" wins!!!\";\n    g_newterrainrequest = Simulator.stepNumber + 95;\n  }\n  //add more nice messages, like \"xxx gives up?\" etc.\n\n  var t = int(Math.time - g_starttime);\n  if (g_starttime)\n    s = (\"Elapsed time: %d:%02d\" % (t/60) % (t%60)) + \"\\n\" + s;\n\n  if (Math.time - g_lasttesttime > 60) //stagnation detection - every minute\n  {\n    if (g_lasttestscore - i < 2)\n    {\n      s = \"This race seems too difficult... let's start another one!\";\n      g_newterrainrequest = Simulator.stepNumber + 295;\n    }\n    g_lasttesttime = Math.time;\n    g_lasttestscore = i;\n  }\n  return s;\n}\n\nfunction setCam()\n{\n  if (Math.time - g_lastcamchange > 20)\n  {\n    g_camdeltaangle = (Math.rnd01 - 0.5) / 2;\n    //add also: TrackingCam.setTarget(winner), TrackingCam.setTarget(looser), funny comments, etc.\n    g_lastcamchange = Math.time;\n  }\n  TrackingCam.cam_dir += g_camdeltaangle; //270:side view, 0=360:front view\n  if (TrackingCam.cam_dir < 270 || TrackingCam.cam_dir > 359)\n    g_camdeltaangle = 0;\n}\n\nfunction onSimStep()\n{\n  if (Simulator.stepNumber == g_restartrequest)\n    ShowProperties_restart_race_call();\n  if (Simulator.stepNumber == g_newterrainrequest)\n    ShowProperties_length_set();\n  if ((Simulator.stepNumber % 100) == 0 &&\n      !(g_newterrainrequest > Simulator.stepNumber || g_restartrequest > Simulator.stepNumber)) //no pending requests\n    GLDisplay.banner = status();\n}\n\nfunction onShowStep()\n{\n    setCam();\n}\n\nfunction removeBad()\n{\n  var allowed = [56, 58, 60, 77, 80, 83, 287, 307]; //only those who can walk straight\n  var angles = [Math.pi, 0, 0, Math.pi, Math.pi, 0, 0, 0]; //rotation needed for some of them\n  var i, j;\n  \n  var pool=GenePools[0];\n  for (i = pool.size - 1;i >= 0;i--)\n  {\n    var g=pool[i];\n    j = allowed.find(g.num);\n    if (j<0)\n    {\n      Simulator.print(\"\\\"\" + g.name + \"\\\" can't run straight, dismissed.\");\n      g.delete();\n    } else g.data->walking_direction = angles[j];\n  }\n}\n\nfunction makeTrackSegment(currH, nextH)\n{\n  var d = nextH - currH;\n  var s = \"\" + currH;\n  s += \" \" + (currH + d * 1 / 4);\n  s += \" \" + (currH + d * 3 / 4);\n  s += \" \" + nextH;\n  return s;\n}\n\nfunction makeTrack()\n{\n  var height = 1.0, track, i;\n  track = makeTrackSegment(height, height) + \" \";\n  var diffic = ShowProperties.difficulty * 3 + 1;\n  for (i = 0;i < ShowProperties.length + 1;i++)\n  {\n    var prevheight = height;\n    height += Math.rnd01 * diffic - 0.5 * diffic;\n    track += makeTrackSegment(prevheight, height) + \" \";\n  }\n  track += makeTrackSegment(height, height);\n  return track;\n}\n\nfunction ShowProperties_length_set, ShowProperties_difficulty_set, ShowProperties_runners_set()\n{\n  Populations[0].clear();\n  Populations[1].clear();\n  ExpProperties.MaxCreated = [2, 3, 5, 7, 9][ShowProperties.runners];\n  ExpProperties.feed = ExpProperties.MaxCreated;\n  World.wrldtyp = 0; //flat for some time to allow new creatures be revived on a flat plane\n  g_restartrequest = Simulator.stepNumber + 20;\n\n  var l = makeTrack(), l2 = \"\"; //l2 is the separating (a little higher) lane\n  var i, k = \"\";\n  var v = String.split2(l, \" \");\n  l = \"\";\n  for (i = v.size - 1;i >= 0;i--) //reversing order\n  {\n    l += \"\" + v[i] + \" \";\n    l2 += \"\" + (1.5 + float(v[i])) + \" \"; //higher: +1.5\n  }\n  for (i = 0;i < ExpProperties.MaxCreated;i++)\n    k += l2 + \"\\n\" + l + \"\\n\" + l + \"\\n\";\n  //  Simulator.print(\"\\n\"+l+\"\\n\"+l2);\n  World.wrldmap = \"M \" + 4 * (3 + ShowProperties.length) + \" \" + (ExpProperties.MaxCreated * 3 + 1) + \" \" + k + l2;\n  World.wrldsiz = 6.0 * 4 * (3 + ShowProperties.length);\n  World.wrldwat = 0;\n  World.wrldbnd = 1;\n}\n\nfunction ShowProperties_restart_race_call()\n{\n  restartRace();\n}\n\n"
  },
  {
    "id": "restart_race",
    "_classname": "property",
    "type": "p",
    "name": "Restart race"
  },
  {
    "id": "runners",
    "_classname": "property",
    "type": "d 0 4 ~2~3~5~7~9",
    "name": "Number of runners"
  },
  {
    "id": "length",
    "_classname": "property",
    "type": "d 0 2 ~Short~Medium~Long",
    "name": "Race length"
  },
  {
    "id": "difficulty",
    "_classname": "property",
    "type": "d 0 2 ~Easy~Medium~Hard",
    "name": "Race difficulty"
  }
]