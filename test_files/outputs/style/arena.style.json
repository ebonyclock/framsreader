[
  {
    "name": "Arena",
    "_classname": "style",
    "info": "A round arena",
    "code": "\n@include \"stdneurons.inc\"\n\nfunction default_model_build()\n{\nElement.useCreature();\nif (Creature.numjoints>0)\n\tVisualModel.jointshadow = 1;\nelse\n\tVisualModel.partshadow = 0.2;\n}\n\nfunction food_model_build()\n{\ndefault_model_build();\nif (Creature.numjoints==0)\n\tVisualModel.partshadow = 1;\n}\n\nfunction default_part_build()\n{\nElement.useCreature();\nif (Creature.numjoints>0)\n\t{\n\tGeomBuilder.addTransform(GeomBuilder.rootNode);\n\tElement.node = GeomBuilder.currentNode;\n\t}\nelse\n\t{\n\tloadAndAddAsTransformNode(\"greenball.ac\");\n\t}\n}\n\nfunction loadAndAddAsTransformNode(filename)\n{\n  Loader.load(filename);\n  if (Loader.loaded)\n  {\n    GeomBuilder.addTransform(GeomBuilder.rootNode);\n    Element.node = GeomBuilder.currentNode;\n    GeomBuilder.add(Loader.loaded);\n  }\n}\n\nfunction manipulator_part_build()\n{\n  loadAndAddAsTransformNode(\"manip-close.ac\");\n}\n\nfunction default_joint_build()\n{\n  Element.useJointPart1();\n  loadAndAddAsTransformNode(\"greenstick\" + int(1.0 + 4.999*p.as) + \".ac\");\n}\n\nfunction default_part_update()\n{\n  Element.useMechPart();\n  GeomBuilder.matrixReset();\n  GeomBuilder.matrixMove1(MechPart.pos);\n  GeomBuilder.matrixOrient1(MechPart.orient);\n  GeomBuilder.setMatrix(Element.node);\n}\n\nfunction food_part_build()\n{\n  loadAndAddAsTransformNode(\"apple.ac\");\n}\n\nfunction food_part_update()\n{\n  Element.useMechPart();\n  GeomBuilder.matrixReset();\n  GeomBuilder.matrixMove1(MechPart.pos);\n  GeomBuilder.matrixMove(0,0,-0.2);\n  GeomBuilder.matrixOrient1(MechPart.orient);\n  Element.useCreature();\n  var e;\n  if (Creature.energy0>0)\n    e = Creature.energy / Creature.energy0;\n  else\n    e=1.0;\n  if (e > 1.0)\n    e = 1.0;\n  else if (e < 0.05)\n    e = 0.05;\n  var zscale = Math.sin(e * 12.57) / 12.0 + e;\n  e = Math.sin(e * 12.57 + 1.57) / 12.0 + e;\n  GeomBuilder.matrixScale(e, e, zscale);\n  GeomBuilder.setMatrix(Element.node);\n  VisualModel.partshadow = e;\n}\n\nfunction default_joint_update()\n{\n  Element.useMechJointPart1();\n  Element.useMechJoint();\n  GeomBuilder.matrixReset();\n  GeomBuilder.matrixMove1(MechPart.pos);\n  GeomBuilder.matrixOrient1(MechJoint.calcorient);\n  GeomBuilder.matrixScale(MechJoint.length, 1, 1);\n  GeomBuilder.setMatrix(Element.node);\n}\n\nfunction modelviewer_build_empty()\n{\n  Scene.backcolor = 0xffcc88;\n  Scene.worldtexture = \"\";\n}\n\nfunction modelviewer_build()\n{\n  Scene.backcolor = 0xffcc88;\n  Scene.worldtexture = \"\";\n}\n\nfunction world_build()\n{\n  Scene.backcolor = 0x999999;\n  Scene.worldtexture = \"field_.png\";\n  switch (World.wrldtyp)\n  {\n  case 0:\n    buildFlatWorld();\n    break;\n\n  case 1:\n    if (World.wrldbnd == 0)\n      buildFlatBoundary();\n    buildBlockWorld();\n    break;\n\n  case 2:\n    if (World.wrldbnd == 0)\n      buildFlatBoundary();\n    buildSmoothWorld();\n  }\n}\n\nfunction buildFlatWorld()\n{\n  Loader.load(\"arenaworld.ac\");\n  if (Loader.loaded==null)\n    return ;\n  GeomBuilder.addTransform(GeomBuilder.rootNode);\n  GeomBuilder.matrixReset();\n  var scale = World.wrldsiz / 20.0;\n  GeomBuilder.matrixScale(scale, scale, scale);\n  GeomBuilder.matrixMove(0, 0, -0.2);\n  GeomBuilder.setMatrix(GeomBuilder.currentNode);\n  GeomBuilder.add(Loader.loaded);\n  buildWorldBoundary();\n  if (World.wrldwat > 0.0)\n    buildWorldWater();\n}\n\nfunction buildWorldWater()\n{\n  if (World.wrldwat < -5.0)\n    return ;\n  var mi = 0.0, ma = World.wrldsiz;\n  if (World.wrldbnd == 0)\n  {\n    mi -= ma;\n    ma += ma;\n  }\n  else\n  {\n    var z = World.wrldwat;\n    if (z > 0.0)\n    {\n      z += 1.0;\n      GeomBuilder.addBranch(GeomBuilder.rootNode);\n      VertexBuilder.newLines();\n      VertexBuilder.addVertex([mi, mi, z, ma, mi, z, ma, mi, z, ma, ma, z,\n                               ma, ma, z, mi, ma, z, mi, ma, z, mi, mi, z,\n                               mi, mi, z, mi, mi, mi, mi, ma, z, mi, ma, mi,\n                               ma, ma, z, ma, ma, mi, ma, mi, z, ma, mi, mi]);\n      VertexBuilder.addColor(0xff000000);\n      Material.new();\n      Material.setFlat();\n      Material.disable(GL.TEXTURE_2D);\n      Material.disable(GL.LIGHTING);\n      Material.colormat = GL.AMBIENT_AND_DIFFUSE;\n      VertexBuilder.material = Material.object;\n      GeomBuilder.add(VertexBuilder.node);\n    }\n  }\n  GeomBuilder.addBranch(GeomBuilder.rootNode);\n  VertexBuilder.newQuads();\n  VertexBuilder.addVertex([mi, mi, World.wrldwat, ma, mi, World.wrldwat, ma, ma, World.wrldwat, mi, ma, World.wrldwat]);\n  VertexBuilder.addNormal(0.0, 0.0, 1.0);\n  VertexBuilder.addColor(0x80ff8833);\n  VertexBuilder.genTexCoordsXY(0.17, 0.17);\n  VertexBuilder.twosided=1;\n  Material.new();\n  Material.setFlat();\n  Material.enable(GL.TEXTURE_2D);\n  Material.enable(GL.BLEND);\n  Material.enable(GL.COLOR_MATERIAL);\n  Material.disable(GL.LIGHTING);\n  Material.translucent = 1;\n  Material.texture = \"waves.png\";\n  VertexBuilder.material = Material.object;\n  GeomBuilder.add(VertexBuilder.node);\n}\n\n@include \"stdblocks.inc\"\n@include \"stdsmooth.inc\"\n@include \"stdboundary.inc\"\n\nfunction buildFlatBoundary()\n{\n  var ma = World.wrldsiz * 2;\n  var mi = 0.0 - World.wrldsiz;\n  var si = World.wrldsiz;\n  var z = -0.2;\n  GeomBuilder.addBranch(GeomBuilder.rootNode);\n  VertexBuilder.newQuads();\n  VertexBuilder.addVertex([si, 0.0, z, ma, 0.0, z, ma, si, z, si, si, z,\n                           0.0, si, z, si, si, z, si, ma, z, 0.0, ma, z,\n                           mi, 0.0, z, 0.0, 0.0, z, 0.0, si, z, mi, si, z,\n                           0.0, mi, z, si, mi, z, si, 0.0, z, 0.0, 0.0, z]);\n  VertexBuilder.addColor(0.80, 0.70, 0.50);\n  VertexBuilder.addNormal(0, 0, 1);\n  Material.new();\n  Material.setFlat();\n  Material.specular = 0;\n  Material.disable(GL.TEXTURE_2D);\n  VertexBuilder.material = Material.object;\n\n  GeomBuilder.add(VertexBuilder.node);\n  GeomBuilder.addBranch(GeomBuilder.rootNode);\n  VertexBuilder.newQuads();\n  VertexBuilder.addVertex([si, si, z, ma, si, z, ma, ma, z, si, ma, z,\n                           si, mi, z, ma, mi, z, ma, 0.0, z, si, 0.0, z,\n                           mi, si, z, 0.0, si, z, 0.0, ma, z, mi, ma, z,\n                           mi, mi, z, 0.0, mi, z, 0.0, 0.0, z, mi, 0.0, z]);\n  VertexBuilder.addColor(0.85, 0.75, 0.55);\n  VertexBuilder.addNormal(0, 0, 1);\n  Material.new();\n  Material.setFlat();\n  Material.disable(GL.TEXTURE_2D);\n  Material.specular = 0;\n  VertexBuilder.material = Material.object;\n  GeomBuilder.add(VertexBuilder.node);\n}\n\n"
  }
]