[
  {
    "name": "Make f0.def describing all neuron classes",
    "_classname": "script",
    "code": "function main()\n{\n  var f = File.create(\"neurof0.def\", \"Neuron classes definition file (compatible with f0.def).\\nContains all registered neuron classes, including script-defined neurons. Can be used to generate 'model.def' file for FRED, or an XML file, or source files used by the NeuroLibrary in GDK.\");\n  var i, j, props;\n  for (i = 0;i < NeuroClassLibrary.count;i++)\n  {\n    NeuroClassLibrary.class = i;\n    f.writeString(\"NEUROCLASS(\" + goodname(NeuroClass.longname) + \",\" + NeuroClass.name + \",\" + NeuroClass.longname + \",`\"\n                  + NeuroClass.description + \"',\" + NeuroClass.prefinputs + \",\" + NeuroClass.prefoutput + \",\"\n                  + NeuroClass.preflocation + \")\\n\");\n    if (NeuroClass.visualhints != 0)\n      f.writeString(\"VISUALHINTS(\" + NeuroClass.visualhints + \")\\n\");\n    if (NeuroClass.glyph != \"\")\n    {\n      var comma = String.indexOf(NeuroClass.glyph, \",\");\n      if (comma > 0)\n        f.writeString(\"SYMBOL(`\" + String.substr(NeuroClass.glyph, comma + 1) + \"')\\n\");\n    }\n    props = NeuroClass.properties;\n    for (j = 0;j < props.size;j++)\n    {\n      var t = props.getType(j);\n      var v = String.split2(t, \" \");\n      f.writeString(\"NEUROPROP(\" + props.getId(j) + \",0,0,\" + props.getName(j) + \",\"\n                    + EIF(v.get(0)) + \",\" + EIF(v.get(1)) + \",\" + EIF(v.get(2)) + \",\" + EIF(v.get(3)) + \",unknownfield)\\n\");\n    }\n    f.writeString(\"ENDNEUROCLASS\\n\\n\");\n  }\n  f.close();\n}\n\nfunction EIF(t)\n{\n  if (t == null)\n    return \"\";\n  else\n    return t;\n}\n\nfunction goodname(name)\n{\n  name = String.replace(name, \" \", \"\");\n  name = String.replace(name, \"[\", \"\");\n  name = String.replace(name, \"]\", \"\");\n  name = String.replace(name, \"!\", \"\");\n  name = String.replace(name, \"-\", \"\");\n  return name;\n}\n"
  }
]