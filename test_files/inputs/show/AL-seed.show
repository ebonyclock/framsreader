show:
name:Initial genotypes
expdef:standard
code:~
@include "AL-shared.inc"

function onBack()
{
if (closePopup()) return;
ShowManager.show="AL-top";
}

function onLoad()
{
	GLDisplay.simsteps = 0;
	GLDisplay.user_interaction=0;
	GLDisplay.world_visibility=1;
	GLDisplay.skybox="cubeworld";
	ShowManager.dispinfo=0;
	GLDisplay.back_action="onBack";

	var but;
	var y=0.2;
	for(var f in ["1","9","F"])
	{
		but=GUI.newButton("seed-"+f,"Get a seed for f"+f+" genotype");
		but.image=GUI.newModel("mod",simplestGenoForFormat(f).genotype);
		but.setAutolayout(0,0,0,0, 0.1,y,0.8,0.2);
		but.userdata=f;
		y+=0.25;
	}

	g_helptxt="<p>Click one of the buttons to get the simplest specimen for various genetic encodings."+
	"<p>Each encoding (a.k.a. a genetic language, a genetic representation or a genetic format) has its own characteristics, and dedicated genetic operators (mutation, crossing over and repair). Learn more <a href=\"http://www.framsticks.com/a/al_genotype.html\">here</a>.";
	addHelpButton(GUI.top_right);
}

function simplestGenoForFormat(f)
{
	return GenMan.getSimplest(f);
}

function onShowStep()
{
	var anim=Math.time;
	TrackingCam.setViewDir(90.0 + 10.0*Math.sin(anim*0.5), 20.0 + 10.0*Math.cos(anim*0.5));
	TrackingCam.cam_zoom = (2.5 + Math.sin(anim * 0.15)) * 3.0 / World.wrldsiz;
}

function onGUIEvent(elem,arg)
{
	if (handleHelp(elem)) return;

	if (String.startsWith(elem.name,"seed-"))
	{
		loadHistory();
		var g=simplestGenoForFormat(elem.userdata);
		g.name="Initial f"+g.format;
		var found=findGenotypeAndName(g.name,g.genotype,GenePools[0]);
		GenePools[0].clear();
		g=GenePools[0].add(g); // g becomes Genotype
		setInitialDataDictionary(g);
		saveCurrent();//always save current
		if (found<0) //add history only if it is not already there
			addHistory(g);
		ShowManager.show="AL-history";
		return;
	}
}

function onKey(code)
{
if (code==GUI.KEY_MENU)
   {
   onBack();
   return 1;
   }
return 0;
}
